{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IronHacks Hack for innovation to solve global challenges. The IronHacks framework will solve your problem of where to start with documentation, by providing a basic explanation of how to do it easily. Background IronHacks brings together a virtual hacking community who participate in high-energy IronHacks challenges. The IronHacks platform offers participants a no setup workspace and many powerful features. Participants get access to a Juypter Lab with GPU , BIG datasets, dashboards, tutorials so that they can excel in data exploration, prediction and visualization. The platform is accessible here Features During an iterative multiphase process, the competing participants have access to GPUs, tutorials, standardized libraries and packages, and virtual help sessions. After each phase, submissions are evaluated within a few hours or days with the help of machine intelligence and human experts. Real-time and targeted feedback accelerate learning and facilitate participants in hacking complex problems. Challenges - Easy access to past, current, and future challenges Workspace - A workspace that integrates to Jupyter Lab and Big Query that allows you to hack in the cloud with no set-up time and costs Feedback - A dashboard with real-time ratings about your submissions as well as access to your peer\u2019s solutions. Research: An Infrastructure for large-scale experiments IronHacks aims to advance theories and practices of platform-enabled innovation organized via challenges and contests by affording researchers to set-up controlled randomized experiments. A researcher in the role of an admin can set-up different control and treatment groups within a particular challenge. Such groups are refer to as cohorts. The assignment to the cohorts happens is by default random. For each cohort, a researcher can specify disitinct tasks, submissions, and also scoring logic. Further they can vary the (1) degree of collaboration and (2) information sharing among the members. With respect to (1) degree of collaboration, researchers can specify if they want to allow cohort members to communicate via forum or not. Further they, can also change the what information they can see and access from other cohort members (e.g. seeing complete solutions in a Jupyter Notebooks versus just seeing textual summaries of others\u2019 submission). The platform offers research that other experimental platforms (O-tree, volunteer science etc) specifically designed for researchers typically: Research on data science in the cloud. On IronHacks, participants tackle data science tasks using a cloud-based editor and the platform allows scholars to track granular user interactions on the IronHacks platform and also in the workspace (the Juptyer Notebook). The task setting is comparable to commercial platforms like Kaggle.com. However, when using Kaggle researchers do not have access to granular trace data about users interactions on Kaggle (including the Notebooks). On IronHacks, researchers can also trace each behavioral interaction on the platform. The IronHacks team is seeking contributions from other researchers to advance the platform\u2019s feature for experimenting. Impact Since 2015, more than 1,000 participants have hacked in parallel virtually around the globe gaining valuable experience in coding as well as work for the chance to win internships, Amazon gift cards, cool swag, and certificates. In addition to the participation and learning, IronHacks provides the opportunity to do research on open innovation contest processes. Innovation Participants developed novel and useful open data solutions in an interactive environment. The platform\u2019s features helped them continuously improve their submissions while learning from real-time feedback and others participating in the hack. Globalization As it encourages a more diverse audience, the virtual setting of our hacking platform has emerged at Purdue and beyond. Participants come from the US, Colombia, and China. Research The scientific team at Purdue generated new knowledge and technology on the implications of machine-enabled feedback and transparency on participants\u2019 productivity and innovation performance. Authors Research Center for Open Digital Innovation Contribute Issue Tracker: github.com/ironhacks/ironhacks-app/issues Source Code: github.com/ironhacks/ironhacks-app Support If you are having technical issues, the best place to direct questions is the through the public issue tracker. To get in touch directly you can reach the team at: opendigital@purdue.edu IronHacks is an initiative of the Research Center for Open Digital Innovation (RCODI). It is financially supported by the National Science Foundation (Award #1462044). Publications License The project is licensed under the GNU General Public License v3.0 by Research Center for Open Digital Innovation (RCODI).","title":"IronHacks"},{"location":"#ironhacks","text":"Hack for innovation to solve global challenges. The IronHacks framework will solve your problem of where to start with documentation, by providing a basic explanation of how to do it easily.","title":"IronHacks"},{"location":"#background","text":"IronHacks brings together a virtual hacking community who participate in high-energy IronHacks challenges. The IronHacks platform offers participants a no setup workspace and many powerful features. Participants get access to a Juypter Lab with GPU , BIG datasets, dashboards, tutorials so that they can excel in data exploration, prediction and visualization. The platform is accessible here","title":"Background"},{"location":"#features","text":"During an iterative multiphase process, the competing participants have access to GPUs, tutorials, standardized libraries and packages, and virtual help sessions. After each phase, submissions are evaluated within a few hours or days with the help of machine intelligence and human experts. Real-time and targeted feedback accelerate learning and facilitate participants in hacking complex problems. Challenges - Easy access to past, current, and future challenges Workspace - A workspace that integrates to Jupyter Lab and Big Query that allows you to hack in the cloud with no set-up time and costs Feedback - A dashboard with real-time ratings about your submissions as well as access to your peer\u2019s solutions.","title":"Features"},{"location":"#research-an-infrastructure-for-large-scale-experiments","text":"IronHacks aims to advance theories and practices of platform-enabled innovation organized via challenges and contests by affording researchers to set-up controlled randomized experiments. A researcher in the role of an admin can set-up different control and treatment groups within a particular challenge. Such groups are refer to as cohorts. The assignment to the cohorts happens is by default random. For each cohort, a researcher can specify disitinct tasks, submissions, and also scoring logic. Further they can vary the (1) degree of collaboration and (2) information sharing among the members. With respect to (1) degree of collaboration, researchers can specify if they want to allow cohort members to communicate via forum or not. Further they, can also change the what information they can see and access from other cohort members (e.g. seeing complete solutions in a Jupyter Notebooks versus just seeing textual summaries of others\u2019 submission). The platform offers research that other experimental platforms (O-tree, volunteer science etc) specifically designed for researchers typically: Research on data science in the cloud. On IronHacks, participants tackle data science tasks using a cloud-based editor and the platform allows scholars to track granular user interactions on the IronHacks platform and also in the workspace (the Juptyer Notebook). The task setting is comparable to commercial platforms like Kaggle.com. However, when using Kaggle researchers do not have access to granular trace data about users interactions on Kaggle (including the Notebooks). On IronHacks, researchers can also trace each behavioral interaction on the platform. The IronHacks team is seeking contributions from other researchers to advance the platform\u2019s feature for experimenting.","title":"Research: An Infrastructure for large-scale experiments"},{"location":"#impact","text":"Since 2015, more than 1,000 participants have hacked in parallel virtually around the globe gaining valuable experience in coding as well as work for the chance to win internships, Amazon gift cards, cool swag, and certificates. In addition to the participation and learning, IronHacks provides the opportunity to do research on open innovation contest processes. Innovation Participants developed novel and useful open data solutions in an interactive environment. The platform\u2019s features helped them continuously improve their submissions while learning from real-time feedback and others participating in the hack. Globalization As it encourages a more diverse audience, the virtual setting of our hacking platform has emerged at Purdue and beyond. Participants come from the US, Colombia, and China. Research The scientific team at Purdue generated new knowledge and technology on the implications of machine-enabled feedback and transparency on participants\u2019 productivity and innovation performance.","title":"Impact"},{"location":"#authors","text":"Research Center for Open Digital Innovation","title":"Authors"},{"location":"#contribute","text":"Issue Tracker: github.com/ironhacks/ironhacks-app/issues Source Code: github.com/ironhacks/ironhacks-app","title":"Contribute"},{"location":"#support","text":"If you are having technical issues, the best place to direct questions is the through the public issue tracker. To get in touch directly you can reach the team at: opendigital@purdue.edu IronHacks is an initiative of the Research Center for Open Digital Innovation (RCODI). It is financially supported by the National Science Foundation (Award #1462044).","title":"Support"},{"location":"#publications","text":"","title":"Publications"},{"location":"#license","text":"The project is licensed under the GNU General Public License v3.0 by Research Center for Open Digital Innovation (RCODI).","title":"License"},{"location":"1-Platform-Documentation/","text":"Platform Overview IronHacks is a cloud-based data science platform developed by the RCODI team. The IronHacks application (a) is written in React. The application is hosted on Google Firebase (b) which also provides cloud file storage, the application database, and serverless functions used by services outside the platform that interact with the IronHacks database. A second server hosted on Geddes (c) provides the JupyterHub/JupyterLab web-based notebook service used by participants which includes GPU. Data used in the hack requires special consideration due to both technical and licensing issues. Google Cloud Platform services (d) are used to store very large datasets and to provide a secure API that the participants can access the challenge data directly in the hosted notebook environment. The team uses GitHub (e) for version control, issue tracking, and project management. Platform Features Key platform features include: A cloud-based data science workspace to perform data science tasks in the cloud using Juptyer notebooks, Event specific announcement banners, Markdown document editor for challenge task description, rules, and tutorials, Participant file and form submission tool, Event forum with email notification system for new posts, Submission scoring tools Results management system including downloadable reports, Notes feature for admins to keep track of issues. Example features for experimental setups. Interactive results dashboard, Jupyter notebook web viewer to view submissions or example files directly in the app, Integration with Qualtrics surveys. Platform Users Users on the platform can be one of two types. Participants Administrators Participants register for hacks, comment on forum posts, work on tasks in the workspace, submit files, and view the results dashboard. Admin users are able to create/setup hacks, create submissions, create forum posts, edit tasks and tutorials, and manage the results dashboard.","title":"Platform Overview"},{"location":"1-Platform-Documentation/#platform-overview","text":"IronHacks is a cloud-based data science platform developed by the RCODI team. The IronHacks application (a) is written in React. The application is hosted on Google Firebase (b) which also provides cloud file storage, the application database, and serverless functions used by services outside the platform that interact with the IronHacks database. A second server hosted on Geddes (c) provides the JupyterHub/JupyterLab web-based notebook service used by participants which includes GPU. Data used in the hack requires special consideration due to both technical and licensing issues. Google Cloud Platform services (d) are used to store very large datasets and to provide a secure API that the participants can access the challenge data directly in the hosted notebook environment. The team uses GitHub (e) for version control, issue tracking, and project management.","title":"Platform Overview"},{"location":"1-Platform-Documentation/#platform-features","text":"Key platform features include: A cloud-based data science workspace to perform data science tasks in the cloud using Juptyer notebooks, Event specific announcement banners, Markdown document editor for challenge task description, rules, and tutorials, Participant file and form submission tool, Event forum with email notification system for new posts, Submission scoring tools Results management system including downloadable reports, Notes feature for admins to keep track of issues. Example features for experimental setups. Interactive results dashboard, Jupyter notebook web viewer to view submissions or example files directly in the app, Integration with Qualtrics surveys.","title":"Platform Features"},{"location":"1-Platform-Documentation/#platform-users","text":"Users on the platform can be one of two types. Participants Administrators Participants register for hacks, comment on forum posts, work on tasks in the workspace, submit files, and view the results dashboard. Admin users are able to create/setup hacks, create submissions, create forum posts, edit tasks and tutorials, and manage the results dashboard.","title":"Platform Users"},{"location":"1-Platform-Documentation/hack-overview/","text":"Hack Overview Hacks are the main activity on the IronHacks platform. Hack Process A Hack is a an iterative multiphase process, where competing participants have access to tutorials, standardized libraries and packages, and virtual help sessions. After each phase, submissions are evaluated with the help of machine intelligence and human experts. A typical hack timeline is made up of the following steps: Hack creation and setup Registration is opened Forum posts and tutorials become available Hack Q&A and live infosessions take place Registration is closed The hack task document and rules are published Participants are assigned to cohorts (*optional) The first submission is completed Results are published to the dashboard Additional forum posts are posted and infosessions take place (*optional) Additional submissions and results Final submission round Final scores are calculated and published Winners are announced Top solutions are published Hack Features Registration Start Date - The date when registration is open Registration End Date - The date when registration is closed Hack Pages Calendar - This page displays and embedded Google Calendar with upcoming events and deadlines. Forum - A forum with informational posts where participants can leave comments and ask questions. Overview - This page outlines all of the hack details and information to users except for the specifics included in the task. Results - This page displays the users individual scores after each submission and may show additional information about the users cohort and overall summary information. Rules - This page shows the rules and terms for the hack. Submissions - The submissions page displays a list of completed and upcoming submissions and their dates. Task - The task page shows the detailed info required for the submissions, scoring methods, and how to access relevant data. Tutorials - This page displays a list of hack specific tutorials that can be used to help users learn about features of the platform or how to use specific packages or types of analysis. Hack Surveys IronHacks supports Qualtrics surveys integration in several places throughout the hack including: During hack registration (used to assess participant background and skill diversity) Before viewing the hack task document (can be used to show terms and conditions and research consent forms) During each submission (can be used to collect additional data about the submission)","title":"Hack Overview"},{"location":"1-Platform-Documentation/hack-overview/#hack-overview","text":"Hacks are the main activity on the IronHacks platform.","title":"Hack Overview"},{"location":"1-Platform-Documentation/hack-overview/#hack-process","text":"A Hack is a an iterative multiphase process, where competing participants have access to tutorials, standardized libraries and packages, and virtual help sessions. After each phase, submissions are evaluated with the help of machine intelligence and human experts. A typical hack timeline is made up of the following steps: Hack creation and setup Registration is opened Forum posts and tutorials become available Hack Q&A and live infosessions take place Registration is closed The hack task document and rules are published Participants are assigned to cohorts (*optional) The first submission is completed Results are published to the dashboard Additional forum posts are posted and infosessions take place (*optional) Additional submissions and results Final submission round Final scores are calculated and published Winners are announced Top solutions are published","title":"Hack Process"},{"location":"1-Platform-Documentation/hack-overview/#hack-features","text":"Registration Start Date - The date when registration is open Registration End Date - The date when registration is closed Hack Pages Calendar - This page displays and embedded Google Calendar with upcoming events and deadlines. Forum - A forum with informational posts where participants can leave comments and ask questions. Overview - This page outlines all of the hack details and information to users except for the specifics included in the task. Results - This page displays the users individual scores after each submission and may show additional information about the users cohort and overall summary information. Rules - This page shows the rules and terms for the hack. Submissions - The submissions page displays a list of completed and upcoming submissions and their dates. Task - The task page shows the detailed info required for the submissions, scoring methods, and how to access relevant data. Tutorials - This page displays a list of hack specific tutorials that can be used to help users learn about features of the platform or how to use specific packages or types of analysis. Hack Surveys IronHacks supports Qualtrics surveys integration in several places throughout the hack including: During hack registration (used to assess participant background and skill diversity) Before viewing the hack task document (can be used to show terms and conditions and research consent forms) During each submission (can be used to collect additional data about the submission)","title":"Hack Features"},{"location":"1-Platform-Documentation/hack-setup/","text":"Hack Admin Admin users must be manually added by a developer. Platform admins can create and manage hacks from the administrator portal at /admin . Hack Settings The hack settings page allows you to update content for a hack including name - The title of the hack slug - the hacks url path description - a brief description of the hack banner image - the image displayed at the top of the overview page thumbnail image - a small image displayed in the hack selection screen publish and unpublish - determines if the hack is visible in the selection screen registration open - manually sets the registration open or closed display options - sets which pages will be visible in the hack navigation registration survey - if this is filled in then participants will be required to fill in the survey when registering difficulty - sets the hack difficulty category Hack Content Content for the hack can be added in several places in the admin area using the integrated markdown editor. Overview Page The hack overview page is the landing page for the hack. This content is also displayed on the hack registration page. Rules Page If rules enabled is checked in the hack display settings then the content here will be displayed on the rules page. Task Page The task page has a unique property that allows you create multiple task documents which can be shown to specific cohorts (managed in the cohort settings area). You should set the default task document if you do not intend to use this feature, which will be shown to any user not in a cohort or if that participants cohort does not have a set task. Only one task can ever be shown to the participant. Each task may enable the a survey url to be included before the task is viewable by the user (this must be manually enabled for each task). To include the task page in the hack navigation area task enabled you must click publish task in the admin task editor view. This feature was created to help track the specific event timing between the start of the hack, registration, and when the task is made avaiable (when users can actually start working on their submission). Tutorials Page You can create multiple tutorials which will be displayed in the hack tutorials list. Examples Page You can create multiple examples and set it to designated cohort for which you want to experiment. You can also create a viewable notebook from this sections, Steps to follow: Upload the ipynb to github to get the raw content url of the notebook. Go the the create a new notebook section in the examples page. Write the desired title in the title section In the text section, just pase the URL. Hooray, you will get a button which will link to the notebook on the IronHacks app. Little trick: Use this link \u201chttps://ironhacks.com/notebook-viewer?path=\u201d, and just copy the path here directly and you can view any python notebook in the app. Notes Page It\u2019s an internal admin feature for discussion and tracking feature and bugs. Hack User Cohorts Cohorts allow participants to be segmented into different groups with additional features that can be enabled. Cohort Options Cohort Task - Each cohort can be assigned to a different task document (created in the admin tasks area). If no cohort is assigned to a participant or if a task is not set for a certain cohort the default task is shown. Show Summaries - If show summaries is enabled participants in this cohort will have access to the \u2018peers\u2019 tab in the results dashboard and will be shown the submission summary, and tags fields from other users in their cohort. Show Notebooks - If show notebooks is enabled participants in this cohort will have access to the \u2018peers\u2019 tab in the results dashboard and will be shown links to view the notebook files submitted by other users in their cohort. Assigning Cohorts There is no limit to the number of cohort groups. New cohorts can be created by selecting the add cohort button and the save button. If a new cohort is created after assigning users to cohorts, there will be no participants assigned to this cohort and you may need reassign groups or manually assign them in the database. Cohorts can be deleted by selecting the delete cohort button and the save button. If a cohort is deleted after assigning users to cohorts, these participants will become unassigned. Doing this may lead to unintended effects. Participants should only be assigned to cohorts once. The best time to do this is after registration for the hack is closed. To assign users to cohorts select the assign users button at the bottom of the admin cohorts area. This will randomly assign all non-admin participants to a cohort. A list of user id\u2019s assigned to each cohort are displayed below the cohort settings section. Hack Submissions Submissions have the following properties: name - the displayed name of the submission submission id - the id of the submission used in the database and url paths deadline - after this time the submission will be closed description - content written in markdown used to describe the background and requirements of the submission survey url - if this field is set the linked survey will be shown when the user hits the submit button submission options submission summary - if this is checked a text summary text field is added to the submission form submission tags - if this is checked an additional multi-select field will be included with a list of tags additional fields - each field created adds an additional question and text input field to the submission. Each field can optionally be set as required. submission files - each file field added to the submission sets the filename and extension that is allowed to be uploaded in the submission form. File fields may optionally be set as required. submission enabled - submissions must be set to enabled to be active. If the submission is not enabled, they will be present in the submission list but participants will not be able to use the form or upload files. solution file - each submission accepts a single file attachment for internal use only to be used in the scoring process. Currently this is used for file management and retrieval purposes only. Hack Results Results Dashboard Document The results page features a single markdown editor that can be used to display information about the results area below the scores section of the results dashboard. Information about the scoring processes or detailed information about how certain metrics are created are typically shown along with the scores. Submission Results Editor Every submission created has an entry in the admin results area which also shows if that result set has been published yet. Submission scores are computed outside of the platform and uploaded via the results editor. In the results editor area admin users can paste the submission results set into the field, validate the content (checks for syntax errors only), and save the results to the database. After the results are saved, they can be downloaded again by hitting the download button and the stats button downloads a summary statistics report. Results saved in the admin results editor are not displayed in the participant dashboard until they are published by hitting the \u201cPublish Results\u201d. This is intended to allow for work in progress and checking for correctness before they are seen by the users.","title":"Hack Admin"},{"location":"1-Platform-Documentation/hack-setup/#hack-admin","text":"Admin users must be manually added by a developer. Platform admins can create and manage hacks from the administrator portal at /admin .","title":"Hack Admin"},{"location":"1-Platform-Documentation/hack-setup/#hack-settings","text":"The hack settings page allows you to update content for a hack including name - The title of the hack slug - the hacks url path description - a brief description of the hack banner image - the image displayed at the top of the overview page thumbnail image - a small image displayed in the hack selection screen publish and unpublish - determines if the hack is visible in the selection screen registration open - manually sets the registration open or closed display options - sets which pages will be visible in the hack navigation registration survey - if this is filled in then participants will be required to fill in the survey when registering difficulty - sets the hack difficulty category","title":"Hack Settings"},{"location":"1-Platform-Documentation/hack-setup/#hack-content","text":"Content for the hack can be added in several places in the admin area using the integrated markdown editor. Overview Page The hack overview page is the landing page for the hack. This content is also displayed on the hack registration page. Rules Page If rules enabled is checked in the hack display settings then the content here will be displayed on the rules page. Task Page The task page has a unique property that allows you create multiple task documents which can be shown to specific cohorts (managed in the cohort settings area). You should set the default task document if you do not intend to use this feature, which will be shown to any user not in a cohort or if that participants cohort does not have a set task. Only one task can ever be shown to the participant. Each task may enable the a survey url to be included before the task is viewable by the user (this must be manually enabled for each task). To include the task page in the hack navigation area task enabled you must click publish task in the admin task editor view. This feature was created to help track the specific event timing between the start of the hack, registration, and when the task is made avaiable (when users can actually start working on their submission). Tutorials Page You can create multiple tutorials which will be displayed in the hack tutorials list. Examples Page You can create multiple examples and set it to designated cohort for which you want to experiment. You can also create a viewable notebook from this sections, Steps to follow: Upload the ipynb to github to get the raw content url of the notebook. Go the the create a new notebook section in the examples page. Write the desired title in the title section In the text section, just pase the URL. Hooray, you will get a button which will link to the notebook on the IronHacks app. Little trick: Use this link \u201chttps://ironhacks.com/notebook-viewer?path=\u201d, and just copy the path here directly and you can view any python notebook in the app. Notes Page It\u2019s an internal admin feature for discussion and tracking feature and bugs.","title":"Hack Content"},{"location":"1-Platform-Documentation/hack-setup/#hack-user-cohorts","text":"Cohorts allow participants to be segmented into different groups with additional features that can be enabled. Cohort Options Cohort Task - Each cohort can be assigned to a different task document (created in the admin tasks area). If no cohort is assigned to a participant or if a task is not set for a certain cohort the default task is shown. Show Summaries - If show summaries is enabled participants in this cohort will have access to the \u2018peers\u2019 tab in the results dashboard and will be shown the submission summary, and tags fields from other users in their cohort. Show Notebooks - If show notebooks is enabled participants in this cohort will have access to the \u2018peers\u2019 tab in the results dashboard and will be shown links to view the notebook files submitted by other users in their cohort. Assigning Cohorts There is no limit to the number of cohort groups. New cohorts can be created by selecting the add cohort button and the save button. If a new cohort is created after assigning users to cohorts, there will be no participants assigned to this cohort and you may need reassign groups or manually assign them in the database. Cohorts can be deleted by selecting the delete cohort button and the save button. If a cohort is deleted after assigning users to cohorts, these participants will become unassigned. Doing this may lead to unintended effects. Participants should only be assigned to cohorts once. The best time to do this is after registration for the hack is closed. To assign users to cohorts select the assign users button at the bottom of the admin cohorts area. This will randomly assign all non-admin participants to a cohort. A list of user id\u2019s assigned to each cohort are displayed below the cohort settings section.","title":"Hack User Cohorts"},{"location":"1-Platform-Documentation/hack-setup/#hack-submissions","text":"Submissions have the following properties: name - the displayed name of the submission submission id - the id of the submission used in the database and url paths deadline - after this time the submission will be closed description - content written in markdown used to describe the background and requirements of the submission survey url - if this field is set the linked survey will be shown when the user hits the submit button submission options submission summary - if this is checked a text summary text field is added to the submission form submission tags - if this is checked an additional multi-select field will be included with a list of tags additional fields - each field created adds an additional question and text input field to the submission. Each field can optionally be set as required. submission files - each file field added to the submission sets the filename and extension that is allowed to be uploaded in the submission form. File fields may optionally be set as required. submission enabled - submissions must be set to enabled to be active. If the submission is not enabled, they will be present in the submission list but participants will not be able to use the form or upload files. solution file - each submission accepts a single file attachment for internal use only to be used in the scoring process. Currently this is used for file management and retrieval purposes only.","title":"Hack Submissions"},{"location":"1-Platform-Documentation/hack-setup/#hack-results","text":"Results Dashboard Document The results page features a single markdown editor that can be used to display information about the results area below the scores section of the results dashboard. Information about the scoring processes or detailed information about how certain metrics are created are typically shown along with the scores. Submission Results Editor Every submission created has an entry in the admin results area which also shows if that result set has been published yet. Submission scores are computed outside of the platform and uploaded via the results editor. In the results editor area admin users can paste the submission results set into the field, validate the content (checks for syntax errors only), and save the results to the database. After the results are saved, they can be downloaded again by hitting the download button and the stats button downloads a summary statistics report. Results saved in the admin results editor are not displayed in the participant dashboard until they are published by hitting the \u201cPublish Results\u201d. This is intended to allow for work in progress and checking for correctness before they are seen by the users.","title":"Hack Results"},{"location":"2-Developer-Documentation/install/","text":"Requirements node.js Setup Clone the repo rcodi/the-ironhacks-platform git clone git@github.com:ironhacks/ironhacks-app.git cd the-ironhacks-platform Install the dependencies: npm install --save-dev Setting up the dev environment The first thing you must do is clone this repository to your local machine and install all the npm packages: Now you can start the local server via npm start: npm run start","title":"Install"},{"location":"2-Developer-Documentation/install/#requirements","text":"node.js","title":"Requirements"},{"location":"2-Developer-Documentation/install/#setup","text":"Clone the repo rcodi/the-ironhacks-platform git clone git@github.com:ironhacks/ironhacks-app.git cd the-ironhacks-platform Install the dependencies: npm install --save-dev","title":"Setup"},{"location":"2-Developer-Documentation/install/#setting-up-the-dev-environment","text":"The first thing you must do is clone this repository to your local machine and install all the npm packages: Now you can start the local server via npm start: npm run start","title":"Setting up the dev environment"},{"location":"2-Developer-Documentation/metrics/","text":"Platform Metrics Event List DEFAULT EVENTS app_load AUTHENTICATION & REGISTRATION EVENTS user_signup user_login user_logout GENERAL PLATFORM EVENTS download_file update_profile register_hack HACK EVENTS These events require user registration Content Viewing Events view_calendar view_notebook view_overview view_task view_post view_profile view_rules view_tutorial User Interaction Events launch_hub open_survey submit_comment user_submission Results Dashboard Events (DURING HACK) results_section_view results_phase_view results_notebook_opened results_summary_expanded ADMIN ONLY submit_post edit_forum_post overview-updated results-published results-unpublished results-updated rules-updated tutorial-created task-created task-published task-unpublished task-updated","title":"Platform Metrics"},{"location":"2-Developer-Documentation/metrics/#platform-metrics","text":"","title":"Platform Metrics"},{"location":"2-Developer-Documentation/metrics/#event-list","text":"","title":"Event List"},{"location":"2-Developer-Documentation/metrics/#default-events","text":"app_load","title":"DEFAULT EVENTS"},{"location":"2-Developer-Documentation/metrics/#authentication-registration-events","text":"user_signup user_login user_logout","title":"AUTHENTICATION &amp; REGISTRATION EVENTS"},{"location":"2-Developer-Documentation/metrics/#general-platform-events","text":"download_file update_profile register_hack","title":"GENERAL PLATFORM EVENTS"},{"location":"2-Developer-Documentation/metrics/#hack-events","text":"These events require user registration","title":"HACK EVENTS"},{"location":"2-Developer-Documentation/metrics/#content-viewing-events","text":"view_calendar view_notebook view_overview view_task view_post view_profile view_rules view_tutorial","title":"Content Viewing Events"},{"location":"2-Developer-Documentation/metrics/#user-interaction-events","text":"launch_hub open_survey submit_comment user_submission","title":"User Interaction Events"},{"location":"2-Developer-Documentation/metrics/#results-dashboard-events-during-hack","text":"results_section_view results_phase_view results_notebook_opened results_summary_expanded","title":"Results Dashboard Events (DURING HACK)"},{"location":"2-Developer-Documentation/metrics/#admin-only","text":"submit_post edit_forum_post overview-updated results-published results-unpublished results-updated rules-updated tutorial-created task-created task-published task-unpublished task-updated","title":"ADMIN ONLY"},{"location":"2-Developer-Documentation/services/","text":"Preparation The Ironhacks Platform (the platform) use the following firebase services: Authentication Cloud Firestore Storage Hosting Cloud Functions Firebase Auth UI We assume you are familiarized with all these services, how they work, and how to code using them. If you are not familiarized with them please check the Firebase documentation. Project structure The platform is a follow the react-create-app structure: ./ .gitignore firebase.json package.json readme.md public/ All the standard react-create-app files source/ img/ Global images js/ source files and entry point. We will get into details on the contents below.","title":"Preparation"},{"location":"2-Developer-Documentation/services/#preparation","text":"The Ironhacks Platform (the platform) use the following firebase services: Authentication Cloud Firestore Storage Hosting Cloud Functions Firebase Auth UI We assume you are familiarized with all these services, how they work, and how to code using them. If you are not familiarized with them please check the Firebase documentation.","title":"Preparation"},{"location":"2-Developer-Documentation/services/#project-structure","text":"The platform is a follow the react-create-app structure: ./ .gitignore firebase.json package.json readme.md public/ All the standard react-create-app files source/ img/ Global images js/ source files and entry point. We will get into details on the contents below.","title":"Project structure"},{"location":"3-Cloud-Api/overview/","text":"Introduction This repository contains the Firebase Cloud Function project that take care of the server duties on the IronHacks platform (the platform). Keep in mind that the platform doesn\u2019t have a proper backend, the following cloud functions are all the platform needs in order to communicate with the firebase database (both the db and the storage). For documentation about the client, go to The IronHacks Platform repository. The need for a backend on the platform obey to three major components: the admin side, the previsualization of a project on the editor and the GitHub integration. All of these requirements are solve using one or more cloud function, saving us the cost of server maintenance. Repository References Development Dev Scripts and Build Utilities serve start shell Deploying Once the configuration is done, the next step is to deploy your functions using the Firebase CLI: firebase deploy --only functions This command will deploy all the functions on the project, and know we can actually talk about the functions:","title":"Overview"},{"location":"3-Cloud-Api/overview/#introduction","text":"This repository contains the Firebase Cloud Function project that take care of the server duties on the IronHacks platform (the platform). Keep in mind that the platform doesn\u2019t have a proper backend, the following cloud functions are all the platform needs in order to communicate with the firebase database (both the db and the storage). For documentation about the client, go to The IronHacks Platform repository. The need for a backend on the platform obey to three major components: the admin side, the previsualization of a project on the editor and the GitHub integration. All of these requirements are solve using one or more cloud function, saving us the cost of server maintenance.","title":"Introduction"},{"location":"3-Cloud-Api/overview/#repository","text":"","title":"Repository"},{"location":"3-Cloud-Api/overview/#references","text":"","title":"References"},{"location":"3-Cloud-Api/overview/#development","text":"Dev Scripts and Build Utilities serve start shell","title":"Development"},{"location":"3-Cloud-Api/overview/#deploying","text":"Once the configuration is done, the next step is to deploy your functions using the Firebase CLI: firebase deploy --only functions This command will deploy all the functions on the project, and know we can actually talk about the functions:","title":"Deploying"},{"location":"3-Cloud-Api/requirements/","text":"Dependencies The Ironhacks Platform (the platform) use the following firebase services: Authentication Cloud Firestore Storage Hosting Cloud Functions Firebase Auth UI We assume you are familiarized with all these services, how they work, and how to code using them. If you are not familiarized with them please check the Firebase documentation.","title":"Requirements"},{"location":"3-Cloud-Api/setup/","text":"Setting up the dev environment This is a clasic Firebase Cloud Functions project, so the \u201cinstallation process\u201d is just deploy the functions (AKA this project) into your Firebase project. In that matter, we recommend you to use this project as template for your implementation of the platform. In order to set it up, do the following: Setting up the Firebase Cloud Functions project Create a Firebase Project from The Firebase Console (If you start by the Platform Repository you propably arlready did this) Initialize the Cloud Functions in your project ( Getting Started Cloud Funtions ) Clone this repo into a diferent folder in your local machine: bash git clone https://github.com/RCODI/the-ironhacks-platform-backend.git Now, go to your project folder and copy the service-account.json file located in the functions folder. Paste into the the-ironhacks-platform-backend repo you just clone, in the same functions folder. This will link the functions on this project with your own Firebase project. Now we need to add the Amazon SES and the Github V3 API keys in order to enable the notifications (via email) for the forum and the automatic repository creation on github. Setting the enviroment variables If you are not familiar with the base Environment configuration, check the docs . In order to make it work, you must set the following env variables: From your Firebase project: database.url = \u201cRealtime database URL\u201d (Keep in mind we don\u2019t use it, this is just to create the admin instance.) Docs database.bucket = \u201cYour storage bucket URL\u201d Docs NOTE: You need to create the service-account.json file on the Firebase console see url: ___ Do not commit this file to the project repo. Initialization Keep in mind that once you set these variables, they are stored in the base project itself, not in your local machine. There is no need to set them again if you switch to another computer. IMPORTANT: The pirvate keys ARE PRIVATE, do not upload to github nor share those key in the web. This is sensitive data that should remain saved on a local machine, under the responsibility of the administrator of the project. If you are not sure about how to get these keys, please refer to the documentation of each library.","title":"Setup"},{"location":"3-Cloud-Api/setup/#setting-up-the-dev-environment","text":"This is a clasic Firebase Cloud Functions project, so the \u201cinstallation process\u201d is just deploy the functions (AKA this project) into your Firebase project. In that matter, we recommend you to use this project as template for your implementation of the platform. In order to set it up, do the following:","title":"Setting up the dev environment"},{"location":"3-Cloud-Api/setup/#setting-up-the-firebase-cloud-functions-project","text":"Create a Firebase Project from The Firebase Console (If you start by the Platform Repository you propably arlready did this) Initialize the Cloud Functions in your project ( Getting Started Cloud Funtions ) Clone this repo into a diferent folder in your local machine: bash git clone https://github.com/RCODI/the-ironhacks-platform-backend.git Now, go to your project folder and copy the service-account.json file located in the functions folder. Paste into the the-ironhacks-platform-backend repo you just clone, in the same functions folder. This will link the functions on this project with your own Firebase project. Now we need to add the Amazon SES and the Github V3 API keys in order to enable the notifications (via email) for the forum and the automatic repository creation on github.","title":"Setting up the Firebase Cloud Functions project"},{"location":"3-Cloud-Api/setup/#setting-the-enviroment-variables","text":"If you are not familiar with the base Environment configuration, check the docs . In order to make it work, you must set the following env variables: From your Firebase project: database.url = \u201cRealtime database URL\u201d (Keep in mind we don\u2019t use it, this is just to create the admin instance.) Docs database.bucket = \u201cYour storage bucket URL\u201d Docs NOTE: You need to create the service-account.json file on the Firebase console see url: ___ Do not commit this file to the project repo.","title":"Setting the enviroment variables"},{"location":"3-Cloud-Api/setup/#initialization","text":"Keep in mind that once you set these variables, they are stored in the base project itself, not in your local machine. There is no need to set them again if you switch to another computer. IMPORTANT: The pirvate keys ARE PRIVATE, do not upload to github nor share those key in the web. This is sensitive data that should remain saved on a local machine, under the responsibility of the administrator of the project. If you are not sure about how to get these keys, please refer to the documentation of each library.","title":"Initialization"}]}